// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TNBase.Repository;

namespace TNBase.Repository.Migrations
{
    [DbContext(typeof(TNBaseContext))]
    [Migration("20210926222114_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("TNBase.Repository.Collector", b =>
                {
                    b.Property<long>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Forename")
                        .HasColumnType("TEXT");

                    b.Property<string>("Postcodes")
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telephone")
                        .HasColumnType("TEXT");

                    b.HasKey("Key");

                    b.ToTable("Collectors");
                });

            modelBuilder.Entity("TNBase.Repository.Listener", b =>
                {
                    b.Property<long>("Wallet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Addr1")
                        .HasColumnType("TEXT");

                    b.Property<string>("Addr2")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Birthday")
                        .HasColumnType("DATE");

                    b.Property<string>("County")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("DeletedDate")
                        .HasColumnType("DATE");

                    b.Property<string>("Forename")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long?>("In1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValueSql("0");

                    b.Property<long?>("In2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValueSql("0");

                    b.Property<long?>("In3")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValueSql("0");

                    b.Property<long?>("In4")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValueSql("0");

                    b.Property<long?>("In5")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValueSql("0");

                    b.Property<long?>("In6")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValueSql("0");

                    b.Property<long?>("In7")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValueSql("0");

                    b.Property<long?>("In8")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValueSql("0");

                    b.Property<string>("Info")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Joined")
                        .HasColumnType("DATE");

                    b.Property<byte[]>("LastIn")
                        .HasColumnType("DATE");

                    b.Property<byte[]>("LastOut")
                        .HasColumnType("DATE");

                    b.Property<byte[]>("Magazine")
                        .HasColumnType("BOOLEAN");

                    b.Property<byte[]>("MemStickPlayer")
                        .HasColumnType("BOOLEAN");

                    b.Property<long?>("Out1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValueSql("0");

                    b.Property<long?>("Out2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValueSql("0");

                    b.Property<long?>("Out3")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValueSql("0");

                    b.Property<long?>("Out4")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValueSql("0");

                    b.Property<long?>("Out5")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValueSql("0");

                    b.Property<long?>("Out6")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValueSql("0");

                    b.Property<long?>("Out7")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValueSql("0");

                    b.Property<long?>("Out8")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValueSql("0");

                    b.Property<string>("Postcode")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("'Active'");

                    b.Property<string>("StatusInfo")
                        .HasColumnType("TEXT");

                    b.Property<long?>("Stock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValueSql("3");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telephone")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<string>("Town")
                        .HasColumnType("TEXT");

                    b.HasKey("Wallet");

                    b.ToTable("Listeners");
                });

            modelBuilder.Entity("TNBase.Repository.Scan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Recorded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasDefaultValueSql("CURRENT_DATE");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("Wallet")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Id" }, "IX_Scans_Id")
                        .IsUnique();

                    b.ToTable("Scans");
                });

            modelBuilder.Entity("TNBase.Repository.WeekStat", b =>
                {
                    b.Property<long>("WeekNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasDefaultValueSql("CURRENT_DATE");

                    b.Property<long>("PausedCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValueSql("'0'");

                    b.Property<long?>("ScannedIn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValueSql("'0'");

                    b.Property<long?>("ScannedOut")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValueSql("'0'");

                    b.Property<long?>("TotalListeners")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValueSql("'0'");

                    b.HasKey("WeekNumber");

                    b.ToTable("WeekStats");
                });

            modelBuilder.Entity("TNBase.Repository.YearStat", b =>
                {
                    b.Property<long>("Year")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("AverageListeners")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValueSql("'0'");

                    b.Property<long?>("AveragePaused")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValueSql("'0'");

                    b.Property<long?>("AverageSent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValueSql("'0'");

                    b.Property<long?>("DeletedListeners")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValueSql("'0'");

                    b.Property<long?>("DeletedTotal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValueSql("'0'");

                    b.Property<long?>("EndListeners")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValueSql("'0'");

                    b.Property<long?>("InactiveTotal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValueSql("'0'");

                    b.Property<long?>("MagazineTotal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValueSql("'0'");

                    b.Property<long?>("MagazinesSent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValueSql("'0'");

                    b.Property<long?>("MemStickPlayerLoanTotal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValueSql("'0'");

                    b.Property<long?>("NewListeners")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValueSql("'0'");

                    b.Property<long?>("PausedTotal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValueSql("'0'");

                    b.Property<long?>("PercentSent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValueSql("'0'");

                    b.Property<long?>("SentTotal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValueSql("'0'");

                    b.Property<long?>("StartListeners")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValueSql("'0'");

                    b.HasKey("Year");

                    b.HasIndex(new[] { "Year" }, "IX_YearStats_Year")
                        .IsUnique();

                    b.ToTable("YearStats");
                });
#pragma warning restore 612, 618
        }
    }
}
